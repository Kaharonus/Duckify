@page "/"
@inject SpotifyService Spotify
@inject SignInManager<User> Auth
@using Duckify.Services
@using Duckify.Components
@using Duckify.Models
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager;  
@inject HttpContextAccessor Accessor;


@if (!IsQueueVisible) {
    <div class="jumbotron vertical-center bg-transparent">
        <div class="container">
            <div class="my-auto align-self-center" style="position: relative">
                <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, 50%)">
                    <h3 class="text-center text-warning">Welcome to Duckify!</h3>
                    <div class="text-center">
                        To use the service either enter a VUT email or register with your own.
                    </div>
                    <AuthIndexPage />
                    <div class="text-warning text-center">
                        <span style="cursor: pointer; text-decoration: underline;" @onclick="ShowQueue">View queue</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else {
    <div class="container">
        <div class="md-form mt-0">
            <SpotifySearchComponent/>
        </div>
        <div class="md-form mt-2">
            <SpotifyQueueComponent/>
        </div>
    </div>
}



@code{
    bool IsQueueVisible { get; set; }

    protected override void OnInitialized() {
        IsQueueVisible = UserManager.GetUserAsync(Accessor.HttpContext.User).Result != null;
        InvokeAsync(StateHasChanged);

        base.OnInitialized();
    }

    void ShowQueue(MouseEventArgs args) {
        IsQueueVisible = true;
        InvokeAsync(StateHasChanged);
    }

}