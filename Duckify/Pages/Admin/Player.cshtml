@page
@model Duckify.Pages.Admin.PlayerModel
@{
    ViewData["Title"] = "Player";
}

<div>
    @{
        if (!Spotify.IsInitialized) {
            <div class="row h-100 justify-content-center align-items-center">
                <div class="col-12">
                    <h1 class="text-center mb-4 mt-5">Login to Spotify to continue</h1>
                    <form class="mt-4 text-center" method="POST">
                        <button class="btn btn-outline-success" type="submit" asp-page-handler="SpotifyLogin">Login</button>
                    </form>
                </div>
            </div>

        } else {
            <div class="shadow" id="player">
                <img id="playerImageCover" />
                <div id="playerControls">
                    <div><b id="songName">Loading...</b></div>
                    <div id="artistNames">&nbsp;</div>
                    <div id="controlButtons">
                        <button class="btn btn-warning d-inline btn-sm" onclick="pause()" id="pause">Pause</button>
                        <button class="btn btn-warning d-inline btn-sm" onclick="next()">Next</button>
                        <button class="btn btn-warning d-inline btn-sm" onclick="mute()">Mute</button>
                        <form class="d-inline" method="POST" id="logoutButton">
                            <button class="btn btn-outline-danger btn-sm" type="submit" asp-page-handler="SpotifyLogout">Logout</button>
                        </form>
                        <input type="range" min="1" max="100" value="50" class="slider" onchange="seek(this.value)" id="progressSlider">

                    </div>
                </div>

            </div>

            <form class="mx-2 my-auto d-inline w-100" id="searchForm">
                <div class="input-group mb-3">
                    <input class="form-control" type="text" placeholder="Search songs" id="searchBox" />
                    <div class="input-group-append">
                        <button class="btn btn-outline-warning" type="submit">Search</button>
                    </div>
                </div>
            </form>
            <div id="searchResults"></div>
            <div id="queueResults"></div>

            @section scripts{
                <script src="@Url.Content("/js/player.js")"></script>
                <script src="@Url.Content("/js/spotify-web-api.js")"></script>
                <script>
                    var spotifyToken = "@Spotify.Client.AccessToken";
                    document.onload = waitForElement();
                    $("#searchForm").submit(function (event) {
                        $.get('/Admin/Player?handler=Search&query=' + $("#searchBox").val(), function (data) {
                            $("#searchResults").html(data)
                        });
                        event.preventDefault();
                    });
                    function goodbye(e) {
                        if (!e) e = window.event;
                        //e.cancelBubble is supported by IE - this will kill the bubbling process.
                        e.cancelBubble = true;
                        e.returnValue = 'Playback will STOP if you leave.'; //This is displayed on the dialog
                        //e.stopPropagation works in Firefox.
                        if (e.stopPropagation) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                    }
                    window.onbeforeunload = goodbye;
                </script>
                <script src="https://sdk.scdn.co/spotify-player.js"></script>
            }


        }
    }
</div>




