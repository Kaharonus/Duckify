@using Microsoft.AspNetCore.Identity
@using Duckify.Models
@using System.Security.Claims
@using System.ComponentModel.DataAnnotations
@using Duckify.Data
@inject SignInManager<User> Auth
@inject ApplicationDbContext Context;

<div class="my-auto align-self-center" style="position: relative">
    <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, 50%)">
        <h3 class="text-center text-warning">Welcome to Duckify!</h3>
        <div class="text-center">
            To use the service either enter a VUT email or register with your own.
        </div>
        <EditForm Model="Login" OnValidSubmit="Submit">
            <div class="input-group mb-3 mt-3">
                <InputText type="text" placeholder="Faculty email" class="text-white form-control bg-dark" @bind-Value="Login.Email"/>
                <div class="input-group-append">
                    <button class=" btn btn-outline-warning" type="submit">Submit</button>
                </div>

            </div>
            <ValidationMessage For="() => Login.Email" class=""/>
            <span style="color: red;" >@Err</span>
            <DataAnnotationsValidator/>
        </EditForm>
    </div>

</div>

@code {

    TempLogin Login { get; set; }
    
    readonly Dictionary<string,object> Attributes = new Dictionary<string, object>{{"class","text-danger"}};

    protected override void OnInitialized() {
        Login = new TempLogin();
        base.OnInitialized();
    }

    private string EmailValue { get; set; }

    private string Err { get; set; }

    private void Submit(EditContext editContext) {
        Err = "Email is not in range";
    }
    

    class TempLogin {
        [Required]
        [EmailAddress(ErrorMessage = "Must be a valid email address")]
        public string Email { get; set; }
    }

}
